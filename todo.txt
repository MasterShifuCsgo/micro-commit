

finish creating the auth of the webiste

- create pages with react, no real design yet
- on page load, make it request an api endpoint
- create the api endpoint

resolveUser takes in a massive object res. make it so that it takes in a portion of it so it doesnt slow the computer down too much.

create documentation for every function
example: 
/**
 * Deletes a goal from the database.
 *
 * The goal is deleted only if both `goal_id` and `user_id` match,
 * ensuring that users can delete only their own goals.
 *
 * @param {number} goal_id - The ID of the goal to delete.
 * @param {number} user_id - The ID of the user who owns the goal.
 * @returns {boolean} True if the goal was deleted, false otherwise.
 */

finish wiring together 
1. when user clicks on goal, loads the commits of the goal. 
if no goals shows image and text that it didnt find any
2. display about goals.
3.implement modal that would allow user to add a new goal
4. implement modal that would allow user to add a new commit
5. implement the new page where user can view the commits commit_message.


add loading to things that need to be fetched that have a waiting time.
Every error would display on the page if there is one. add a context, create a component which is on every page.
  make it not take up any space on the screen. when there is an update in the conetxt like error, creates the popup and removes the displaying of it shortly after.

create /editcommit page



hours it took to finish: 

17h

6h of stupid work





Lessons i have learned:

you know you have the knowledge to make what you want a reality on that website.
yet you still say you have no idea and ask chatGPT to finish your frontend.
you can do the same if you just tried to make it work yourself. 
you have all the knowledge.
